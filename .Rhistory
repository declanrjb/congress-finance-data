df <- as.data.frame(matrix(ncol="5" nrow="0"))
genDf <- data.frame(matrix(ncol = 5, nrow = 0))
source("~/Documents/R/House Scraping/openSecretsScrape.R")
source("~/Documents/R/House Scraping/openSecretsScrape.R")
write.csv(genDf,"houseData_backup2.csv")
source("~/Documents/R/House Scraping/openSecretsScrape.R")
source("~/Documents/R/House Scraping/openSecretsScrape.R")
write.csv(genDf,"houseDate_backup3.csv")
source("~/Documents/R/House Scraping/openSecretsScrape.R")
source("~/Documents/R/House Scraping/openSecretsScrape.R")
dim(genDf)
Vie(genDf)
View(genDf)
write.csv(genDf,"houseData_backup4.csv")
source("~/Documents/R/House Scraping/openSecretsScrape.R")
dim(genDf)
write.csv(genDf,"houseData_backup5.csv")
source("~/Documents/R/House Scraping/openSecretsScrape.R")
dim(genDf)
dim(genDf)
write.csv(genDf,"houseData_backup6.csv")
source("~/Documents/R/House Scraping/openSecretsScrape.R")
dim(genDf)
write.csv(genDf,"houseData_backup7.csv")
source("~/Documents/R/House Scraping/openSecretsScrape.R")
dim(genDf)
write.csv(genDf,"houseData_backup8.csv")
source("~/Documents/R/House Scraping/openSecretsScrape.R")
View(genDf)
dim(genDf)
write.csv(genDf,"houseData_backup9.csv")
source("~/Documents/R/House Scraping/openSecretsScrape.R")
dim(genDf)
write.csv(genDf,"houseData_backup10.csv")
source("~/Documents/R/House Scraping/openSecretsScrape.R")
dim(genDf)
write.csv(genDf,"houseData_backup11.csv")
source("~/Documents/R/House Scraping/openSecretsScrape.R")
dim(genDf)
write.csv(genDf,"houseData_backup12.csv")
dim(genDf)
source("~/Documents/R/House Scraping/openSecretsScrape.R")
dim(genDf)
source("~/Documents/R/House Scraping/openSecretsScrape.R")
dim(genDf)
write.csv(genDf,"houseData_backup13.csv")
write.csv(genDf,"allHouseData.csv", row.names = FALSE)
source("~/Documents/R/House Scraping/script.R")
dim(nodes)
dim(edges)
View(nodes)
View(edges)
min(nodes$Size)
max(nodes$Size)
write.csv(genDf,"houseData_backup14.csv", row.names = FALSE)
View(edges)
write.csv(nodes,"candidates_nodes2022.csv", row.names = FALSE)
write.csv(edges,"candidates_edges2022.csv", row.names = FALSE)
dim(edges)
dim(nodes)
dim(edges)
dim(unique(edges))
edges <- unique(edges)
dim(edges)
write.csv(edges,"candidates_edges2022.csv", row.names = FALSE)
min(nodes$Size)
max(nodes$Size)
dim(edges)
View(edges)
sum(edges$Label)
parse_number(edges$Label)
library(tidyverse)
library(xml2)
library(rvest)
library(dplyr)
library(readr)
library(data.table)
parse_number(edges$Label[1])
parse_number(edges$Label)
sum(parse_number(edges$Label))
View(genDf)
dim(genDf)
dim(unique(genDf))
sumDf <- unique(genDf)
dim(sumDf)
sum(parse_number(sumDf$Total))
to_lower(sumDf$Contributor)
tolower(sumDf$Contributor)
View(sumDf)
sumDf$Contributor <- tolower(sumDf$Contributor)
sumDf$Senator <- tolower(sumDf$Senator)
dim(sumDf)
dim(unique(sumDf))
sum(parse_number(sumDf$Total))
sum(parse_number(sumDf$PACs))
sum(parse_number(sumDf$Individuals))
sum(parse_number(sumDf$Total))
average(parse_number(sumDf$Total))
mean(parse_number(sumDf$Total))
View(candIDs)
View(candID)
View(genDf)
dim(genDf)
dim(unique(genDf))
genDf <- unique(genDf)
dim(genDf)
max(genDf$Total)
parse_number(genDf$Total)
library(tidyverse)
library(xml2)
library(rvest)
library(dplyr)
library(readr)
library(data.table)
parse_number(genDf$Total)
max(parse_number(genDf$Total))
statsDf <- genDf
statsDf$Total <- parse_number(statsDf$Total)
View(statsDf)
library(rvest)
webpage <- read_html("https://ballotpedia.org/United_States_Senate_elections,_2022#Candidate_lists_by_state")
tbls <- html_nodes(webpage, "marqueetable")
head(tbls)
tbls <- html_nodes(webpage, "table")
head(tbls)
tbls_ls <- webpage %>%
html_nodes("table") %>%
.[4] %>%
html_table(fill = TRUE)
str(tbls_ls)
tbls_ls <- webpage %>%
html_nodes("table") %>%
.[6] %>%
html_table(fill = TRUE)
str(tbls_ls)
tbls_ls <- webpage %>%
html_nodes("table") %>%
.[7] %>%
html_table(fill = TRUE)
str(tbls_ls)
tbls_ls <- webpage %>%
html_nodes("table") %>%
.[8] %>%
html_table(fill = TRUE)
str(tbls_ls)
View(candIDs)
View(candID)
senCands <- read_csv("senateCands2022.csv")
View(senCands)
"Shervin Aazami" %in% candID$name
"Joe Pinion" %in% candID$name
senCands <- cbind(senCands,opensecrets=NA)
senCands[1]$Name
senCands[1,]$Name
source("~/Documents/R/House Scraping/senCandsIntegrate.R")
which(candID$name == "Shervin Aazami")
which(candID$name == "Jeff Bartos")
source("~/Documents/R/House Scraping/senCandsIntegrate.R")
senCands %>% filter(opensecrets != NA)
senCands %>% filter(senCands$opensecrets != NA)
senCands %>% filter(!is.na(opensecrets))
dim(senCands %>% filter(!is.na(opensecrets)))
dim(senCands %>% filter(is.na(opensecrets)))
senCands$opensecrets[4] <- "N00001093"
View(genDf)
View(nodes_senators)
nodes_senators <- unique(nodes_senators)
dim(nodes_senators)
elected_congress <- read_csv("ElectedCongress.csv")
View(elected_congress)
nodes_senators <- cbind(nodes_senators,Elected=NA)
strsplit(nodes_senators$Name[1]," ")
strsplit(nodes_senators$Name," ")
strsplit(nodes_senators$Name," ")[1]
as.data.frame(strsplit(nodes_senators$Name," "))
(strsplit(nodes_senators$Name," "))[1]
(strsplit(nodes_senators$Name," "))[1,]
(strsplit(nodes_senators$Name," "))[1]
unlist(strsplit(nodes_senators$Name," "))
unlist(strsplit(nodes_senators$Name[1]," "))
unlist(strsplit(nodes_senators$Name[1]," ", fixed = TRUE))
strsplit(nodes_senators$Name," ")[[1]]
strsplit(nodes_senators$Name[1]," ")[[1]]
strsplit(nodes_senators$Name[1]," ")
strsplit(nodes_senators$Name[1]," ")[[1]]
(strsplit(nodes_senators$Name[1]," ")[[1]])[1]
(strsplit(nodes_senators$Name," ")[[1]])[1]
(strsplit(nodes_senators$Name," ")[1])[1]
(strsplit(nodes_senators$Name," ")[[1]])[1]
(strsplit(nodes_senators$Name," ")[[2]])[2]
(strsplit(nodes_senators$Name," ")[[2]])[1]
(strsplit(nodes_senators$Name," ")[[3]])[1]
nodes_senators <- cbind(nodes_senators, firstName=NA)
nodes_senators <- cbind(nodes_senators, lastName=NA)
length((strsplit(nodes_senators$Name," ")[[1]]))
source("~/Documents/R/House Scraping/CheckElected.R")
nodes_senators %>% select(!Elected)
nodes_senators %>% filter(!Elected)
colnames(nodes_senators) <- c("Name","bad1","firstName","lastName","bad2","bad3","bad4")
nodes_senators %>% filter(!bad1)
nodes_senators %>% select(!bad1)
nodes_senators <- nodes_senators %>% select(!bad1)
nodes_senators <- nodes_senators %>% select(!bad2)
nodes_senators <- nodes_senators %>% select(!bad3)
nodes_senators <- nodes_senators %>% select(!bad4)
nodes_senators <- cbind(nodes_senators, Elected=NA)
nodes_senators %>% filter(Name %in% elected_congress)
source("~/Documents/R/House Scraping/CheckElected.R")
source("~/Documents/R/House Scraping/CheckElected.R")
source("~/Documents/R/House Scraping/CheckElected.R")
source("~/Documents/R/House Scraping/CheckElected.R")
paste(nodes_senators$firstName,nodes_senators$lastName)
nodes_senators$Name <- paste(nodes_senators$firstName,nodes_senators$lastName)
source("~/Documents/R/House Scraping/CheckElected.R")
checkingFrame <- as.data.frame()
checkingFrame <- data.frame(checkCandidate,foundElectee,rowOfCheck,rowFoundElectee)
checkingFrame <- as.data.frame(matrix(ncol=4, nrow=0))
colnames(checkingFrame) <- c("checkCandidate","foundElectee","rowOfCheck","rowFoundElectee")
View(checkingFrame)
(which(elected_congress$Last == nodes_senators$lastName[5])
)
(which(elected_congress$Last == nodes_senators$lastName[5]))
length((which(elected_congress$Last == nodes_senators$lastName[5])))
source("~/Documents/R/House Scraping/CheckElected.R")
checkingFrame <- data.frame(matrix(ncol=4, nrow=0))
source("~/Documents/R/House Scraping/CheckElected.R")
source("~/Documents/R/House Scraping/CheckElected.R")
source("~/Documents/R/House Scraping/CheckElected.R")
nodes_senators$Elected[62] <- FALSE
nodes_senators$Elected[62] <- NA
rownames(nodes_senators) <- seq(length=nrow(nodes_senators))
nodes_senators$Elected[8] <- FALSE
nodes_senators$Elected[12] <- FALSE
paste(elected_congress$First,elected_congress$Last)
elected_congress$Name <- paste(elected_congress$First,elected_congress$Last)
source("~/Documents/R/House Scraping/CheckElected.R")
nodes_senators$Elected[13] <- TRUE
nodes_senators$firstName[13] <- "Rick"
nodes_senators$Elected[26] <- TRUE
nodes_senators$Elected[33] <- TRUE
nodes_senators$firstName[33] <- "Don"
nodes_senators$Elected[44] <- FALSE
nodes_senators$Elected[52] <- FALSE
nodes_senators$Elected[54] <- FALSE
nodes_senators$Elected[65] <- FALSE
nodes_senators$Elected[85] <- FALSE
nodes_senators$Elected[92] <- FALSE
nodes_senators$Elected[100] <- FALSE
nodes_senators$Elected[101] <- FALSE
nodes_senators$Elected[102] <- FALSE
nodes_senators$Elected[105] <- TRUE
nodes_senators$firstName[105] <- "Vern"
nodes_senators$Elected[126] <- FALSE
nodes_senators$Elected[133] <- TRUE
nodes_senators$Elected[164] <- TRUE
nodes_senators$firstName[164] <- "Jim"
nodes_senators$Elected[167] <- FALSE
nodes_senators$Elected[170] <- FALSE
nodes_senators$Elected[192] <- FALSE
nodes_senators$Elected[204] <- FALSE
nodes_senators$Elected[205] <- TRUE
nodes_senators$Elected[208] <- FALSE
nodes_senators$Elected[244] <- FALSE
nodes_senators$Elected[246] <- FALSE
nodes_senators$Elected[262] <- FALSE
nodes_senators$Elected[265] <- TRUE
nodes_senators$firstName <- "Pat"
nodes_senators$Elected[271] <- FALSE
for (i in 1:length(nodes_senators$Name)) {
nodes_senators$firstName[i] <- (strsplit(nodes_senators$Name," ")[[i]])[1]
nodes_senators$lastName[i] <- (strsplit(nodes_senators$Name," ")[[i]])[length((strsplit(nodes_senators$Name," ")[[i]]))]
}
nodes_senators$Elected[193] <- FALSE
nodes_senators$Elected[306] <- FALSE
nodes_senators$Elected[327] <- FALSE
nodes_senators$Elected[328] <- FALSE
nodes_senators$Elected[346] <- FALSE
nodes_senators$Elected[379] <- FALSE
nodes_senators$Elected[397] <- FALSE
nodes_senators$Elected[405] <- FALSE
nodes_senators$Elected[408] <- FALSE
nodes_senators$Elected[409] <- FALSE
nodes_senators$Elected[418] <- FALSE
nodes_senators$Elected[420] <- FALSE
nodes_senators$Elected[421] <- FALSE
nodes_senators$Elected[423] <- FALSE
nodes_senators$Elected[305] <- FALSE
nodes_senators$Elected[430] <- FALSE
nodes_senators$Elected[431] <- FALSE
nodes_senators$Elected[433] <- TRUE
nodes_senators$Elected[434] <- FALSE
nodes_senators$Elected[436] <- FALSE
nodes_senators$Elected[437] <- FALSE
nodes_senators$Elected[440] <- FALSE
nodes_senators$Elected[455] <- FALSE
nodes_senators$Elected[458] <- FALSE
nodes_senators$Elected[462] <- FALSE
nodes_senators$Elected[463] <- FALSE
nodes_senators$Elected[426] <- FALSE
nodes_senators$Elected[476] <- FALSE
nodes_senators$Elected[479] <- FALSE
nodes_senators$Elected[480] <- FALSE
nodes_senators$Elected[493] <- TRUE
nodes_senators$Elected[500] <- TRUE
nodes_senators$Elected[522] <- FALSE
nodes_senators$Elected[525] <- FALSE
nodes_senators$Elected[529] <- FALSE
nodes_senators$Elected[564] <- FALSE
nodes_senators$Elected[567] <- FALSE
nodes_senators$Elected[589] <- TRUE
nodes_senators$Elected[593] <- TRUE
nodes_senators$Elected[611] <- FALSE
nodes_senators$Elected[623] <- FALSE
nodes_senators$Elected[640] <- FALSE
nodes_senators$Elected[644] <- TRUE
nodes_senators$Elected[651] <- TRUE
nodes_senators$Elected[660] <- TRUE
nodes_senators$Elected[663] <- FALSE
nodes_senators$Elected[683] <- FALSE
nodes_senators$Elected[705] <- FALSE
nodes_senators$Elected[766] <- FALSE
nodes_senators$Elected[770] <- FALSE
nodes_senators$Elected[771] <- TRUE
nodes_senators$Elected[465] <- FALSE
nodes_senators$Elected[788] <- FALSE
nodes_senators$Elected[793] <- TRUE
nodes_senators$Elected[798] <- FALSE
nodes_senators$Elected[822] <- FALSE
nodes_senators$Elected[824] <- FALSE
nodes_senators$Elected[825] <- FALSE
nodes_senators$Elected[826] <- FALSE
nodes_senators$Elected[827] <- FALSE
nodes_senators$Elected[828] <- FALSE
nodes_senators$Elected[830] <- FALSE
nodes_senators$Elected[831] <- FALSE
nodes_senators$Elected[832] <- FALSE
nodes_senators$Elected[833] <- FALSE
nodes_senators$Elected[834] <- FALSE
nodes_senators$Elected[859] <- FALSE
nodes_senators$Elected[883] <- FALSE
nodes_senators$Elected[884] <- TRUE
nodes_senators$Elected[896] <- FALSE
nodes_senators$Elected[904] <- TRUE
nodes_senators$Elected[905] <- FALSE
nodes_senators$Elected[928] <- FALSE
nodes_senators$Elected[944] <- FALSE
nodes_senators$Elected[958] <- FALSE
nodes_senators$Elected[959] <- FALSE
write.csv(nodes_senators,"nodes_senators.csv")
nodes_senators$Name <- paste(nodes_senators$firstName,nodes_senators$lastName)
source("~/Documents/R/House Scraping/CheckElected.R")
source("~/Documents/R/House Scraping/CheckElected.R")
write.csv(nodes_senators,"nodes_senators.csv")
nodes_senators %>% select(!firstName)
nodes_senators %>% select(!firstName) %>% select(!lastName)
nodes_senators <- nodes_senators %>% select(!firstName) %>% select(!lastName)
View(nodes_orgs)
nodes_orgs <- cbind(nodes_orgs,Elected=FALSE)
source("~/Documents/R/House Scraping/script.R")
library(tidyverse)
library(xml2)
library(rvest)
library(dplyr)
library(readr)
library(data.table)
options(scipen = 100)
#source("~/Documents/R/House Scraping/openSecretsScrape.R")
scraped_data <- read_csv("allHouseData.csv")
#Assemble a one column data frame of unique nodes
nodes_base <- scraped_data
#nodes_senators <- data.frame(nodes_base$Senator)
#colnames(nodes_senators)[1] <- "Name"
#nodes_senators <- cbind(nodes_senators, firstName=NA)
#nodes_senators <- cbind(nodes_senators, lastName=NA)
#nodes_senators <- cbind(nodes_senators, Elected=NA)
nodes_senators <- read_csv("nodes_senators.csv")
nodes_senators <- nodes_senators %>% select(!firstName) %>% select(!lastName)
nodes_orgs <- data.frame(nodes_base$Contributor)
colnames(nodes_orgs)[1] <- "Name"
nodes_orgs <- cbind(nodes_orgs,Elected=FALSE)
View(nodes_orgs)
View(nodes_senators)
nodes_senators %>% select(!...1)
nodes_senators <- nodes_senators %>% select(!...1)
write.csv(nodes_senators,"nodes_senators.csv", row.names = FALSE)
source("~/Documents/R/House Scraping/script.R")
source("~/Documents/R/House Scraping/script.R")
View(nodes)
min(nodes$Size)
max(nodes$Size)
View(nodes)
View(nodes_senators)
library(tidyverse)
library(xml2)
library(rvest)
library(dplyr)
library(readr)
library(data.table)
options(scipen = 100)
#source("~/Documents/R/House Scraping/openSecretsScrape.R")
scraped_data <- read_csv("allHouseData.csv")
#Assemble a one column data frame of unique nodes
nodes_base <- scraped_data
#nodes_senators <- data.frame(nodes_base$Senator)
#colnames(nodes_senators)[1] <- "Name"
#nodes_senators <- cbind(nodes_senators, firstName=NA)
#nodes_senators <- cbind(nodes_senators, lastName=NA)
#nodes_senators <- cbind(nodes_senators, Elected=NA)
nodes_senators <- read_csv("nodes_senators.csv")
nodes_orgs <- data.frame(nodes_base$Contributor)
colnames(nodes_orgs)[1] <- "Name"
nodes_orgs <- cbind(nodes_orgs,Elected=FALSE)
nodes <- rbind(nodes_senators,nodes_orgs)
nodes <- unique(nodes)
#Fill in total amounts for every entry in nodes
nodes <- cbind(nodes, Amount=NA)
source("~/Documents/R/House Scraping/sumAmounts.R")
amountLimit <- 1000
requiredEdges <- 0
View(nodes)
View(scraped_data)
dim(scraped_data)
write.csv(scraped_data,"scraped_data.csv", row.names = FALSE)
source("~/Documents/R/House Scraping/sumAmounts.R")
source("~/Documents/R/House Scraping/sumAmounts.R")
scraped_data <- scraped_data %>% select(!First)
scraped_data <- scraped_data %>% select(!First) %>% select(!last())
scraped_data <- scraped_data %>% select(!First) %>% select(!Last)
scraped_data %>% filter(Total)
scraped_data %>% select(Total)
scraped_data %>% select(Contributor,Total)
scraped_data %>% select(Contributor,Total,PACs,Individuals,Senator)
scraped_data <- scraped_data %>% select(Contributor,Total,PACs,Individuals,Senator)
source("~/Documents/R/House Scraping/sumAmounts.R")
scraped_data <- scraped_data %>% select(!First) %>% select(!Last)
source("~/Documents/R/House Scraping/script.R")
View(nodes)
View(house_data_to_join)
house_data_to_join <- cbind(house_data_to_join, First=NA)
house_data_to_join <- cbind(house_data_to_join, Last=NA)
(strsplit(house_data_to_join$Id," "))[1]
for (i in 1:length(house_data_to_join$Id)) {
house_data_to_join$First[i] <- (strsplit(house_data_to_join$Id," ")[[i]])[1]
house_data_to_join$Last[i] <- (strsplit(house_data_to_join$Id," ")[[i]])[length((strsplit(house_data_to_join$Id," ")[[i]]))]
}
house_data_to_join$Id <- paste(house_data_to_join$First,house_data_to_join$Last)
source("~/Documents/R/House Scraping/script.R")
View(nodes)
source("~/Documents/R/House Scraping/script.R")
View(nodes)
nodes <- cbind(nodes, ElectColor=NA)
for (i in 1:length(nodes$Elected)) {
message(i)
if (nodes[i,]$Elected == TRUE) {
nodes[i,]$ElectColor <- nodes[i,]$Color
} else {
nodes[i,]$ElectColor <- "grey"
}
}
warnings()
nodes[1,]$ElectColor <- "grey"
nodes$ElectColor[1] <- "grey"
for (i in 1:length(nodes$Elected)) {
message(i)
if (nodes[i,]$Elected == TRUE) {
nodes$ElectColor[i] <- nodes$Color[i]
} else {
nodes$ElectColor[i] <- "grey"
}
}
write.csv(nodes,"elected_nodes2022.csv", row.names = FALSE)
nodes$Color[855] <- "yellow"
nodes$Color[308] <- "red"
View(genDf)
genDf %>% filter(Senator == Charles Schumer)
genDf %>% filter(Senator == "Charles Schumer")
genDf %>% filter(Senator == "Charles E Schumer")
schumerDf <- genDf %>% filter(Senator == "Charles E Schumer")
sum(parse_number(schumerDf$Total))
testDf <- read_csv("Congress/candidates_nodes2022.csv")
library(tidyverse)
library(xml2)
library(rvest)
library(dplyr)
library(readr)
library(data.table)
testDf <- read_csv("Congress/candidates_nodes2022.csv")
View(testDf)
testDf <- read_csv("Congress/elected_nodes2022.csv")
dim(testDf)
testDf[1:901,]
testDf ,- testDf[1:901,]
testDf <- testDf[1:901,]
elected <- testDf %>% filter(Elected == TRUE)
View(elected)
notElected <- testDf %>% filter(Elected == False)
notElected <- testDf %>% filter(Elected == FALSE)
View(notElected)
dim(elected)
dim(notElected)
elected$Amount[1]
typeof(elected$Amount[1])
mean(elected$Amount)
average(elected$Amount)
mean(notElected$Amount)
217800.3/69346.96
min(elected$Amount)
max(notElected$Amount)
min(notElected$Amount)
testDF %>% filter(Amount < 19255)
testDf %>% filter(Amount < 19255)
dim(notElected)
